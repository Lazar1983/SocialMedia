{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/no-img.jpg","images/icon.png"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","clearErrors","PostScream","open","body","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","classes","MyButton","Dialog","onClose","fullWidth","maxWidth","closeButton","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","variant","color","submitButton","disabled","CircularProgress","size","progressSpinner","Component","connect","newScream","post","response","withStyles","theme","spreadThis","position","float","marginTop","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","length","Badge","badgeContent","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationIds","Navbar","AppBar","Toolbar","rest","render","DeleteScream","deleteScream","deleteButton","DialogActions","delete","bottom","LikeButton","likedScream","find","likeScream","unlikeScream","mapActionsToProps","Comments","Grid","container","comment","userImage","item","sm","src","alt","commentImage","commentData","format","invisibleSeparator","variabnt","visibleSeparator","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","likeCount","commentCount","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","expandButton","dialogContent","padding","marginBottom","Scream","Card","card","CardMedia","image","CardContent","content","display","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","backgroundColor","palette","primary","main","width","margin","fullLine","halfLine","Paper","paper","profile","NoImg","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","id","hidden","href","rel","align","buttons","cardContent","flexDirection","cover","date","Array","from","home","getScreams","recentScreamsMarkup","xs","login","userData","email","password","loginUser","form","AppIcon","pageTitle","noValidate","general","customError","progress","push","signup","newUserData","confirmPassword","signupUser","screamIdParam","match","params","screamsMarkup","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","paddingTop","fontSize","border","borderBottom","verticalAlign","cursor","baseURL","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5d4596ad.chunk.js","sourcesContent":["import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload\r\n      };\r\n    case LOADING_USER: \r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId\r\n          }\r\n        ]\r\n      };\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter((like) => like.screamId !== action.payload.screamId)\r\n      };\r\n    case MARK_NOTIFICATIONS_READ:\r\n      state.notifications.forEach((not) => (not.read = true));\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SET_SCREAMS,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  LOADING_DATA,\r\n  DELETE_SCREAM,\r\n  POST_SCREAM,\r\n  SET_SCREAM,\r\n  SUBMIT_COMMENT\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  screams: [],\r\n  scream: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case SET_SCREAMS:\r\n      return {\r\n        ...state,\r\n        screams: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_SCREAM:\r\n      return {\r\n        ...state,\r\n        scream: action.payload\r\n      };\r\n    case LIKE_SCREAM:\r\n    case UNLIKE_SCREAM:\r\n      let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n      state.screams[index] = action.payload;\r\n      if (state.scream.screamId === action.payload.screamId) {\r\n        state.scream = action.payload;\r\n      }\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_SCREAM:\r\n      index = state.screams.findIndex(\r\n        (scream) => scream.screamId === action.payload\r\n      );\r\n      state.screams.splice(index, 1);\r\n      return {\r\n        ...state\r\n      };\r\n    case POST_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: [action.payload, ...state.screams]\r\n      };\r\n    case SUBMIT_COMMENT:\r\n      return {\r\n        ...state,\r\n        scream: {\r\n          ...state.scream,\r\n          comments: [action.payload, ...state.scream.comments]\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case STOP_LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n  UI: uiReducer\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  MARK_NOTIFICATIONS_READ\r\n} from '../types';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios.post('/login', userData)\r\n      .then((res) => {\r\n        setAuthorizationHeader(res.data.token);\r\n        dispatch(getUserData());\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n}\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/signup', newUserData)\r\n    .then((res) => {\r\n      setAuthorizationHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      history.push('/');\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem('FBIdToken');\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\n\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios\r\n    .get('/user')\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios.post('/user/image', formData)\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios.post('/user', userDetails)\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n  axios\r\n    .post('/notifications', notificationIds)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: MARK_NOTIFICATIONS_READ\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n  const FBIdToken = `Bearer ${token}`;\r\n  localStorage.setItem('FBIdtoken', FBIdToken);\r\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n}\r\n","import React from 'react';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n  <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n);","import {\r\n  SET_SCREAMS,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  SET_ERRORS,\r\n  POST_SCREAM,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_SCREAM,\r\n  STOP_LOADING_UI,\r\n  SUBMIT_COMMENT\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\n// Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get('/screams')\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: []\r\n      });\r\n    });\r\n};\r\nexport const getScream = (screamId) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .get(`/scream/${screamId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Post a scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/scream', newScream)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: POST_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// Like a scream\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n  axios.get(`/scream/${screamId}/like`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Unlike a scream\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n  axios.get(`/scream/${screamId}/unlike`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UNLIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Submit a comment\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n  axios\r\n    .post(`/scream/${screamId}/comment`, commentData)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUBMIT_COMMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n//Delete a scream\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n  axios.delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_SCREAM,\r\n        payload: screamId\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get(`/user/${userHandle}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data.screams\r\n      });\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: null\r\n      });\r\n    });\r\n};\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  submitButton: {\r\n    position: 'relative',\r\n    float: 'right',\r\n    marginTop: 10\r\n  },\r\n  progressSpinner: {\r\n    position: 'absolute'\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '91%',\r\n    top: '6%'\r\n  }\r\n});\r\n\r\nclass PostScream extends Component {\r\n  state = {\r\n    open: false,\r\n    body: '',\r\n    errors: {}\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({\r\n        errors: nextProps.UI.errors\r\n      });\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '', open: false, errors: {} });\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.props.clearErrors();\r\n    this.setState({ open: false, errors: {} });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.postScream({ body: this.state.body });\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton onClick={this.handleOpen} tip=\"Нова објава\">\r\n          <AddIcon />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Затвори\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogTitle>Објави нешто ново ... </DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                name=\"body\"\r\n                type=\"text\"\r\n                label=\"Твоја објава\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"Scream at your fellows\"\r\n                error={errors.body ? true : false}\r\n                helperText={errors.body}\r\n                className={classes.textField}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submitButton}\r\n                disabled={loading}\r\n              >\r\n                Објави\r\n                {loading && (\r\n                  <CircularProgress\r\n                    size={30}\r\n                    className={classes.progressSpinner}\r\n                  />\r\n                )}\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPostScream.propTypes = {\r\n  postScream: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { postScream, clearErrors }\r\n)(withStyles(styles)(PostScream));","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n// MUI stuff\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n// Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n  handleOpen = (event) => {\r\n    this.setState({ anchorEl: event.target });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  onMenuOpened = () => {\r\n    let unreadNotificationsIds = this.props.notifications\r\n      .filter((not) => !not.read)\r\n      .map((not) => not.notificationId);\r\n    this.props.markNotificationsRead(unreadNotificationsIds);\r\n  };\r\n  render() {\r\n    const notifications = this.props.notifications;\r\n    const anchorEl = this.state.anchorEl;\r\n\r\n    dayjs.extend(relativeTime);\r\n\r\n    let notificationsIcon;\r\n    if (notifications && notifications.length > 0) {\r\n      notifications.filter((not) => not.read === false).length > 0  // number of notifications\r\n        ? (notificationsIcon = (\r\n            <Badge\r\n              badgeContent={\r\n                notifications.filter((not) => not.read === false).length\r\n              }\r\n              color=\"secondary\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          ))\r\n        : (notificationsIcon = <NotificationsIcon />);\r\n    } else {\r\n      notificationsIcon = <NotificationsIcon />;\r\n    }\r\n    let notificationsMarkup =\r\n      notifications && notifications.length > 0 ? (\r\n        notifications.map((not) => {\r\n          const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n          const time = dayjs(not.createdAt).fromNow();\r\n          const iconColor = not.read ? 'primary' : 'secondary';\r\n          const icon =\r\n            not.type === 'like' ? (\r\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            ) : (\r\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            );\r\n\r\n          return (\r\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n              {icon}\r\n              <Typography\r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n              >\r\n                {not.sender} {verb} твоја објава {time}\r\n              </Typography>\r\n            </MenuItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <MenuItem onClick={this.handleClose}>\r\n          Немате нови известувања\r\n        </MenuItem>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Известувања\">\r\n          <IconButton\r\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            {notificationsIcon}\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          onEntered={this.onMenuOpened}\r\n        >\r\n          {notificationsMarkup}\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func.isRequired,\r\n  notifications: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.user.notifications\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { markNotificationsRead }\r\n)(Notifications);","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport PostScream from '../scream/PostScream';\r\nimport Notifications from './Notifications';\r\n//M-UI stuff\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { authenticated } = this.props;\r\n    return (\r\n      <AppBar>\r\n        <Toolbar className=\"nav-container\">\r\n          {authenticated ? (\r\n            <Fragment>\r\n              <PostScream/>\r\n              <Link to=\"/\">\r\n                <MyButton tip=\"Насловна\">\r\n                  <HomeIcon/>\r\n                </MyButton>\r\n              </Link>\r\n              <Notifications />\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                Најави се\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/\">\r\n                Насловна страна\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                Регистрирај се\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component, Fragment } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    left: '90%',\r\n    bottom: '10%'\r\n  }\r\n};\r\n\r\nclass DeleteScream extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  deleteScream = () => {\r\n    this.props.deleteScream(this.props.screamId);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Избриши објава\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.deleteButton}\r\n        >\r\n          <DeleteOutline color=\"secondary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>\r\n            Дали сте сигурно дека сакате да ја избришете оваа објава ?\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Откажи\r\n            </Button>\r\n            <Button onClick={this.deleteScream} color=\"secondary\">\r\n              Избриши\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n  deleteScream: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteScream }\r\n)(withStyles(styles)(DeleteScream));","import React, { Component } from 'react';\r\nimport MyButton from '../../util/MyButton';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n// Icons\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n// REdux\r\nimport { connect } from 'react-redux';\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\n\r\nexport class LikeButton extends Component {\r\n  likedScream = () => {\r\n    if (\r\n      this.props.user.likes &&\r\n      this.props.user.likes.find(\r\n        (like) => like.screamId === this.props.screamId\r\n      )\r\n    )\r\n      return true;\r\n    else return false;\r\n  };\r\n  likeScream = () => {\r\n    this.props.likeScream(this.props.screamId);\r\n  };\r\n  unlikeScream = () => {\r\n    this.props.unlikeScream(this.props.screamId);\r\n  };\r\n  render() {\r\n    const { authenticated } = this.props.user;\r\n    const likeButton = !authenticated ? (\r\n      <Link to=\"/login\">\r\n        <MyButton tip=\"Допаѓања\">\r\n          <FavoriteBorder color=\"primary\" />\r\n        </MyButton>\r\n      </Link>\r\n    ) : this.likedScream() ? (\r\n      <MyButton tip=\"избриши допаѓање\" onClick={this.unlikeScream}>\r\n        <FavoriteIcon color=\"primary\" />\r\n      </MyButton>\r\n    ) : (\r\n      <MyButton tip=\"Ми се допаѓа\" onClick={this.likeScream}>\r\n        <FavoriteBorder color=\"primary\" />\r\n      </MyButton>\r\n    );\r\n    return likeButton;\r\n  }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  likeScream: PropTypes.func.isRequired,\r\n  unlikeScream: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  likeScream,\r\n  unlikeScream\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(LikeButton);","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n// MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  commentImage: {\r\n    maxWidth: '100%',\r\n    height: 100,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n  },\r\n  commentData: {\r\n    marginLeft: 20\r\n  }\r\n});\r\n\r\nclass Comments extends Component {\r\n  render() {\r\n    const { comments, classes } = this.props;\r\n    return (\r\n      <Grid container>\r\n        {comments.map((comment, index) => {\r\n          const { body, createdAt, userImage, userHandle } = comment;\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={12}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={userImage}\r\n                      alt=\"comment\"\r\n                      className={classes.commentImage}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className={classes.commentData}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {userHandle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeparator} />\r\n                      <Typography variabnt=\"body1\">{body}</Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {index !== comments.length - 1 && (\r\n                <hr className={classes.visibleSeparator} />\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis\r\n});\r\n\r\nclass CommentForm extends Component {\r\n  state = {\r\n    body: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '' });   // clear comments\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n  };\r\n\r\n  render() {\r\n    const { classes, authenticated } = this.props;\r\n    const errors = this.state.errors;\r\n\r\n    const commentFormMarkup = authenticated ? (\r\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            name=\"body\"\r\n            type=\"text\"\r\n            label=\"Коментирај на објава\"\r\n            error={errors.comment ? true : false}\r\n            helperText={errors.comment}\r\n            value={this.state.body}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            className={classes.textField}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Објави\r\n          </Button>\r\n        </form>\r\n        <hr className={classes.visibleSeparator} />\r\n      </Grid>\r\n    ) : null;\r\n    return commentFormMarkup;\r\n  }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  submitComment: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitComment }\r\n)(withStyles(styles)(CommentForm));","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI Stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  profileImage: {\r\n    maxWidth: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    objectFit: 'cover'\r\n  },\r\n  dialogContent: {\r\n    padding: 20\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  expandButton: {\r\n    position: 'absolute',\r\n    left: '90%',\r\n    top: '10%'\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 50\r\n  }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: '',\r\n    newPath: ''\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      this.handleOpen();\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname;\r\n\r\n    const { userHandle, screamId } = this.props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\r\n\r\n    window.history.pushState(null, null, newPath);\r\n\r\n    this.setState({ open: true, oldPath, newPath });\r\n    this.props.getScream(this.props.screamId);\r\n  };\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath);\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      scream: {\r\n        screamId,\r\n        body,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImage,\r\n        userHandle,\r\n        comments\r\n      },\r\n      UI: { loading }\r\n    } = this.props;\r\n\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={10}>\r\n        <Grid item sm={5}>\r\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n            to={`/users/${userHandle}`}\r\n          >\r\n            @{userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} допаѓања</span>\r\n          <MyButton tip=\"коментари\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} коментари</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator} />\r\n        <CommentForm screamId={screamId} />\r\n        <Comments comments={comments} />\r\n      </Grid>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          onClick={this.handleOpen}\r\n          tip=\"Прегледај ја објавата\"\r\n          tipClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Затвори\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  clearErrors: PropTypes.func.isRequired,\r\n  getScream: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";  // its easy for use beacuse moment have a lot of more functionality, we will not use\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton';\r\n// MUI Stuff\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n  card: {\r\n    position: \"relative\",\r\n    display: 'flex',\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    minWidth: 200\r\n  },\r\n  content: {\r\n    padding: 25,\r\n    objectFit: \"cover\"\r\n  }\r\n};\r\n\r\nclass Scream extends Component {\r\n  render() {\r\n    dayjs.extend(relativeTime);\r\n    // const classes = this.props.classes \r\n    const {\r\n      classes,\r\n      scream: {\r\n        body,\r\n        createdAt,\r\n        userImage,\r\n        userHandle,\r\n        screamId,\r\n        likeCount,\r\n        commentCount\r\n      },\r\n      user: {\r\n        authenticated,\r\n        credentials : {\r\n          handle\r\n        }\r\n      }\r\n    } = this.props;\r\n\r\n    const deleteButton = authenticated && userHandle === handle ? (\r\n      <DeleteScream screamId={screamId}/>\r\n    ) : null\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia image={userImage} title=\"Profile image\" className={classes.image}/>\r\n        <CardContent className={classes.content}>\r\n          <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color='primary'>{userHandle}</Typography>\r\n          {deleteButton}\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} допаѓања </span>\r\n          <MyButton tip='коментари'>\r\n            <ChatIcon color='primary' />\r\n          </MyButton>\r\n          <span>{commentCount} коментари </span>\r\n          <ScreamDialog\r\n            screamId={screamId}\r\n            userHandle={userHandle}\r\n            openDialog={this.props.openDialog}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nScream.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  button: {\r\n    float: 'right'\r\n  }\r\n});\r\nclass EditDetails extends Component {\r\n  state = {\r\n    bio: '',\r\n    website: '',\r\n    location: '',\r\n    open: false\r\n  };\r\n  mapUserDetailsToState = (credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : '',\r\n      website: credentials.website ? credentials.website : '',\r\n      location: credentials.location ? credentials.location : ''\r\n    });\r\n  };\r\n  mapUserDetailsToState = (credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : '',\r\n      website: credentials.website ? credentials.website : '',\r\n      location: credentials.location ? credentials.location : ''\r\n    });\r\n  }\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n    this.mapUserDetailsToState(this.props.credentials);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserDetailsToState(credentials);\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const userDetails = {\r\n      bio: this.state.bio,\r\n      website: this.state.website,\r\n      location: this.state.location\r\n    };\r\n    this.props.editUserDetails(userDetails);\r\n    this.handleClose();\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton tip=\"Промени ги личните податоци\" onClick={this.handleOpen} btnClassName=\"button\">\r\n          <EditIcon color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n          <DialogTitle>Промени ги лични податоци</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                type=\"text\"\r\n                label=\"Повеќе за мене: \"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A short bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                type=\"text\"\r\n                label=\"Моја бев страна или омилена: \"\r\n                placeholder=\"Your personal/professinal website\"\r\n                className={classes.textField}\r\n                value={this.state.website}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                type=\"text\"\r\n                label=\"Location\"\r\n                placeholder=\"Каде живееш: \"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">Откажи</Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">Запиши</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n  editUserDetails: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport NoImg from '../images/no-img.jpg';\r\n// MUI\r\nimport Paper from '@material-ui/core/Paper';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  handle: {\r\n    height: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: 60,\r\n    margin: '0 auto 7px auto'\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '100%',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '50%',\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nconst ProfileSkeleton = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <div className={classes.handle} />\r\n          <hr />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.fullLine} />\r\n          <hr />\r\n          <LocationOn color=\"primary\" /> <span>Локација</span>\r\n          <hr />\r\n          <LinkIcon color=\"primary\" /> https://website.com\r\n          <hr />\r\n          <CalendarToday color=\"primary\" /> Дата на регистрација\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport MyButton from '../../util/MyButton';\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\r\n//MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis\r\n});\r\n\r\nclass Profile extends Component {\r\n  handleImageChange = (event) => {\r\n    const image = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', image, image.name);  // 1.name 2.value 3.blob\r\n    this.props.uploadImage(formData); //uploadImage is an action from redux in user actions\r\n  };\r\n  handleEditPicture = () => {\r\n    const fileInput = document.getElementById('imageInput');\r\n    fileInput.click();\r\n  };\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { classes, user : { credentials: { handle, createdAt, imageUrl, bio, website, location },\r\n        loading,\r\n        authenticated\r\n      } } = this.props;\r\n\r\n      let profileMarkup = !loading ? (\r\n      authenticated ? (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n              <input type=\"file\" id=\"imageInput\"  hidden=\"hidden\" onChange={this.handleImageChange}/>\r\n              <MyButton tip=\"Промени ја насловната фотографија\" onClick={this.handleEditPicture} btnClassName=\"button\">\r\n                <EditIcon color=\"primary\" />\r\n              </MyButton>\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/users/${handle}`}\r\n                color=\"primary\"\r\n                variant=\"h5\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              <hr />\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {' '}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />{' '}\r\n              <span>Се придружив {dayjs(createdAt).format('MMM YYYY')}</span>\r\n            </div>\r\n              <MyButton tip=\"Одјави се\" onClick={this.handleLogout}>\r\n                <KeyboardReturn color=\"primary\" />\r\n              </MyButton>\r\n            <EditDetails/>\r\n          </div>\r\n        </Paper>\r\n      ) : (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            Не е најден таков профил, ве молиме регистрирајте се повторно\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/login\"\r\n            >\r\n              Најави се\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/signup\"\r\n            >\r\n              Регистрирај се\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      )\r\n    ) : (\r\n      <ProfileSkeleton/> \r\n    );\r\n\r\n\r\n    return profileMarkup;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = { logoutUser, uploadImage };\r\n\r\nProfile.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from 'react';\r\nimport NoImg from '../images/no-img.jpg';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 20\r\n  },\r\n  cardContent: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    padding: 25\r\n  },\r\n  cover: {\r\n    minWidth: 200,\r\n    objectFit: 'cover'\r\n  },\r\n  handle: {\r\n    width: 60,\r\n    height: 18,\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginBottom: 7\r\n  },\r\n  date: {\r\n    height: 14,\r\n    width: 100,\r\n    backgroundColor: 'rgba(0,0,0, 0.3)',\r\n    marginBottom: 10\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: '90%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    width: '50%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nconst ScreamSkeleton = (props) => {\r\n  const { classes } = props;\r\n\r\n  const content = Array.from({ length: 5 }).map((item, index) => (\r\n    <Card className={classes.card} key={index}>\r\n      <CardMedia className={classes.cover} image={NoImg} />\r\n      <CardContent className={classes.cardContent}>\r\n        <div className={classes.handle} />\r\n        <div className={classes.date} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.halfLine} />\r\n      </CardContent>\r\n    </Card>\r\n  ));\r\n\r\n  return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nScreamSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ScreamSkeleton);","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\n\r\nclass home extends Component {\r\n  componentDidMount() {\r\n    this.props.getScreams();\r\n  }\r\n\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    let recentScreamsMarkup = !loading ? (\r\n      screams.map((scream) => \r\n        <Scream key={scream.screamId} scream={scream}/>\r\n      )\r\n    ) : ( <ScreamSkeleton /> );\r\n    return (\r\n      <Grid container spacing={8}>\r\n        <Grid item sm={8} xs={12}>\r\n          {recentScreamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nhome.propTypes = {\r\n  getScreams: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/icon.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis\r\n});\r\n\r\nclass login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData, this.props.history);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, UI: { loading } } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <img src={AppIcon} alt=\"logo\" className={classes.image} />\r\n          <Typography variant=\"h2\" className={classes.pageTitle}>\r\n            Најави се\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"е-маил\"\r\n              className={classes.textField}\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"лозинка\"\r\n              className={classes.textField}\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Најави се\r\n              {loading && (\r\n                <CircularProgress size={30} className={classes.progress} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              немате свој профил ? регистрирајте се <Link to=\"/signup\">овде</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  loginUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/icon.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis\r\n});\r\n\r\nclass signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      handle: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    const newUserData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n      handle: this.state.handle\r\n    };\r\n    this.props.signupUser(newUserData, this.props.history)\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, UI: { loading } } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <img src={AppIcon} alt=\"logo\" className={classes.image} />\r\n          <Typography variant=\"h2\" className={classes.pageTitle}>\r\n            Регистрирај се\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"е-маил\"\r\n              className={classes.textField}\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Лозинка\"\r\n              className={classes.textField}\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              label=\"Confirm Password\"\r\n              className={classes.textField}\r\n              helperText={errors.confirmPassword}\r\n              error={errors.confirmPassword ? true : false}\r\n              value={this.state.confirmPassword}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"handle\"\r\n              name=\"handle\"\r\n              type=\"text\"\r\n              label=\"Корисничко име\"\r\n              className={classes.textField}\r\n              helperText={errors.handle}\r\n              error={errors.handle ? true : false}\r\n              value={this.state.handle}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Регистрирај се\r\n              {loading && (\r\n                <CircularProgress size={30} className={classes.progress} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              Веќе имате профил ? најавете се <Link to=\"/login\">овде</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nsignup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  signupUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signupUser }\r\n)(withStyles(styles)(signup));","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n  const {\r\n    classes,\r\n    profile: { handle, createdAt, imageUrl, bio, website, location }\r\n  } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <MuiLink\r\n            component={Link}\r\n            to={`/users/${handle}`}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n          >\r\n            @{handle}\r\n          </MuiLink>\r\n          <hr />\r\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n          <hr />\r\n          {location && (\r\n            <Fragment>\r\n              <LocationOn color=\"primary\" /> <span>{location}</span>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          {website && (\r\n            <Fragment>\r\n              <LinkIcon color=\"primary\" />\r\n              <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {' '}\r\n                {website}\r\n              </a>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          <CalendarToday color=\"primary\" />{' '}\r\n          <span>Се придружи на {dayjs(createdAt).format('MMM YYYY')}</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Scream from '../components/scream/Scream';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../redux/actions/dataActions';\r\n\r\nclass user extends Component {\r\n  state = {\r\n    profile: null,\r\n    screamIdParam: null\r\n  };\r\n  componentDidMount() {\r\n    const handle = this.props.match.params.handle;\r\n    const screamId = this.props.match.params.screamId;\r\n\r\n    if (screamId) this.setState({ screamIdParam: screamId });\r\n\r\n    this.props.getUserData(handle);\r\n    axios\r\n      .get(`/user/${handle}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          profile: res.data.user\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    const { screamIdParam } = this.state;\r\n\r\n    const screamsMarkup = loading ? (\r\n      <ScreamSkeleton/>\r\n    ) : screams === null ? (\r\n      <p>Овој профил нема објави</p>\r\n    ) : !screamIdParam ? (\r\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\r\n    ) : (\r\n      screams.map((scream) => {\r\n        if (scream.screamId !== screamIdParam)\r\n          return <Scream key={scream.screamId} scream={scream} />;\r\n        else return <Scream key={scream.screamId} scream={scream} openDialog />;\r\n      })\r\n    )\r\n\r\n    return (\r\n      <Grid container spacing={16}>\r\n        <Grid item sm={8} xs={12}>\r\n          {screamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          {this.state.profile === null ? (\r\n            <ProfileSkeleton/>\r\n          ) : (\r\n            <StaticProfile profile={this.state.profile} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nuser.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUserData }\r\n)(user);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport jwtDecode from 'jwt-decode';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n//components\nimport Navbar from \"./components/layout/Navbar\";\nimport themeFile from './util/theme';\nimport AuthRoute from './util/AuthRoute';\n\n//pages\nimport home from \"./pages/home\";\nimport login from \"./pages/login\";\nimport signup from \"./pages/signup\";\nimport user from \"./pages/user\";\n\nimport axios from 'axios';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = 'https://europe-west1-socialmediaapp-4cc1a.cloudfunctions.net/api';\n\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    window.location.href = '/login'\n    store.dispatch(logoutUser());\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={home}/>\n                <AuthRoute exact path=\"/login\" component={login}/>\n                <AuthRoute exact path=\"/signup\" component={signup}/>\n                <Route exact path='/users/:handle' component={user}/>\n                <Route exact path=\"/users/:handle/scream/:screamId\" component={user}/>\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: '#673ab7',\r\n      main: '#4e69a2',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#536dfe',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n  spreadThis: {\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    form: {\r\n      textAlign: \"center\"\r\n    },\r\n    image: {\r\n      margin: \"20px auto 20px auto\",\r\n      width: \"100px\",\r\n      paddingTop: '56.25%' // 16:9\r\n    },\r\n    pageTitle: {\r\n      margin: \"10px auto 10px auto\"\r\n    },\r\n    textField: {\r\n      margin: \"10px auto 10px auto\"\r\n    },\r\n    button: {\r\n      marginTop: 20,\r\n      position: 'relative'\r\n    },\r\n    customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10\r\n    },\r\n    progress: {\r\n      position: 'absolute'\r\n    },\r\n    invisibleSeparator: {\r\n      border: 'none',\r\n      margin: 4\r\n    },\r\n    visibleSeparator: {\r\n      width: '100%',\r\n      borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n      marginBottom: 20\r\n    },\r\n      paper: {\r\n    padding: 20\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: '#f44336'\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-img.e39a5233.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icon.00516d8e.png\";"],"sourceRoot":""}